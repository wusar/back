// THIS KERNEL IS MACHINE-GENERATED BY ARK.
#define ARK_THREADS_PER_BLOCK 256
#define ARK_KERNELS_SYNC_CLKS_CNT 1048576
__device__ volatile unsigned long long int *_ARK_DOORBELL;
__device__ volatile unsigned           int *_ARK_SC;
__device__ volatile unsigned           int *_ARK_RC;
__device__ long long int *_ARK_CLKS;
__device__ int _ITER = 0;
#include "ark_kernels.h"
__device__ ark::sync::State _ARK_LOOP_SYNC_STATE;
__device__ char *_ARK_BUF;
// tile dims: (64, 128, 1)
__noinline__ __device__ void op_0_matmul_tile_task(int tile_idx) {
ark::matmul<16384, 16384, 16384, false, false, 0, false, 256, 166912, 128, 256, 64>((ark::half *)&_ARK_BUF[1073741824], (ark::half *)&_ARK_BUF[0], (ark::half *)&_ARK_BUF[536870912], (tile_idx & 63), (tile_idx >> 6) & 127, tile_idx >> 13);
}
// tile dims: (256, 256, 1)
__noinline__ __device__ void op_1_add_tile_task(int tile_idx) {
ark::add<16384, 16384, 0, 128, 0, 64, 64, 1>((ark::half *)&_ARK_BUF[1073741824], (ark::half *)&_ARK_BUF[1073741824], (ark::half *)&_ARK_BUF[1610612736], (tile_idx & 255), (tile_idx >> 8) & 255, tile_idx >> 16);
}
// tile dims: (256, 256, 1)
__noinline__ __device__ void op_2_scale_tile_task(int tile_idx) {
ark::scale<16384, 16384, 128, 0, 64, 64, 1>((ark::half *)&_ARK_BUF[1073741824], (ark::half *)&_ARK_BUF[1073741824], 2.3, (tile_idx & 255), (tile_idx >> 8) & 255, tile_idx >> 16);
}
__noinline__ __device__ void op_0_matmul() {
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 0);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 216);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 432);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 648);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 864);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 1080);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 1296);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 1512);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 1728);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 1944);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 2160);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 2376);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 2592);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 2808);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 3024);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 3240);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 3456);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 3672);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 3888);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 4104);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 4320);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 4536);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 4752);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 4968);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 5184);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 5400);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 5616);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 5832);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 6048);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 6264);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 6480);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 6696);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 6912);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 7128);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 7344);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 7560);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 7776);
  }
 }
if(blockIdx.x < 92){
  if(threadIdx.x<512){
   op_0_matmul_tile_task(2*(blockIdx.x - 0) + threadIdx.x / 256 + 7992);
  }
 }
if(blockIdx.x >= 92&& blockIdx.x < 108){
  if(threadIdx.x<256){
   op_0_matmul_tile_task(1*(blockIdx.x - 92) + threadIdx.x / 256 + 8176);
  }
 }
}
__noinline__ __device__ void op_1_add() {
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 0);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 432);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 864);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 1296);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 1728);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 2160);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 2592);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3024);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3456);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3888);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 4320);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 4752);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 5184);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 5616);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6048);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6480);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6912);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 7344);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 7776);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 8208);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 8640);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9072);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9504);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9936);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 10368);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 10800);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 11232);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 11664);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12096);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12528);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12960);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 13392);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 13824);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 14256);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 14688);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15120);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15552);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15984);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 16416);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 16848);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 17280);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 17712);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 18144);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 18576);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19008);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19440);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19872);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 20304);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 20736);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 21168);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 21600);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22032);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22464);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22896);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 23328);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 23760);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 24192);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 24624);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25056);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25488);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25920);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 26352);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 26784);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 27216);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 27648);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28080);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28512);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28944);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 29376);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 29808);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 30240);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 30672);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31104);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31536);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31968);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 32400);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 32832);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 33264);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 33696);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34128);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34560);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34992);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 35424);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 35856);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 36288);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 36720);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 37152);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 37584);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38016);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38448);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38880);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 39312);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 39744);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 40176);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 40608);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41040);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41472);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41904);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 42336);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 42768);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 43200);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 43632);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44064);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44496);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44928);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 45360);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 45792);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 46224);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 46656);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47088);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47520);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47952);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 48384);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 48816);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 49248);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 49680);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50112);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50544);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50976);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 51408);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 51840);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 52272);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 52704);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 53136);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 53568);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54000);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54432);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54864);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 55296);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 55728);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 56160);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 56592);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57024);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57456);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57888);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 58320);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 58752);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 59184);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 59616);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60048);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60480);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60912);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 61344);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 61776);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 62208);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 62640);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63072);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63504);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63936);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 64368);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_1_add_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 64800);
  }
 }
if(blockIdx.x < 88){
  if(threadIdx.x<384){
   op_1_add_tile_task(3*(blockIdx.x - 0) + threadIdx.x / 128 + 65232);
  }
 }
if(blockIdx.x >= 88&& blockIdx.x < 108){
  if(threadIdx.x<256){
   op_1_add_tile_task(2*(blockIdx.x - 88) + threadIdx.x / 128 + 65496);
  }
 }
}
__noinline__ __device__ void op_2_scale() {
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 0);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 432);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 864);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 1296);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 1728);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 2160);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 2592);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3024);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3456);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 3888);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 4320);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 4752);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 5184);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 5616);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6048);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6480);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 6912);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 7344);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 7776);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 8208);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 8640);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9072);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9504);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 9936);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 10368);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 10800);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 11232);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 11664);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12096);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12528);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 12960);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 13392);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 13824);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 14256);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 14688);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15120);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15552);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 15984);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 16416);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 16848);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 17280);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 17712);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 18144);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 18576);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19008);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19440);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 19872);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 20304);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 20736);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 21168);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 21600);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22032);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22464);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 22896);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 23328);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 23760);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 24192);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 24624);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25056);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25488);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 25920);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 26352);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 26784);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 27216);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 27648);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28080);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28512);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 28944);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 29376);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 29808);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 30240);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 30672);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31104);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31536);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 31968);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 32400);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 32832);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 33264);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 33696);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34128);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34560);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 34992);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 35424);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 35856);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 36288);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 36720);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 37152);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 37584);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38016);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38448);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 38880);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 39312);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 39744);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 40176);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 40608);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41040);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41472);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 41904);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 42336);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 42768);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 43200);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 43632);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44064);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44496);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 44928);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 45360);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 45792);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 46224);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 46656);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47088);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47520);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 47952);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 48384);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 48816);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 49248);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 49680);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50112);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50544);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 50976);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 51408);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 51840);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 52272);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 52704);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 53136);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 53568);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54000);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54432);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 54864);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 55296);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 55728);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 56160);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 56592);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57024);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57456);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 57888);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 58320);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 58752);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 59184);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 59616);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60048);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60480);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 60912);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 61344);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 61776);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 62208);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 62640);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63072);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63504);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 63936);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 64368);
  }
 }
if(blockIdx.x < 108){
  if(threadIdx.x<512){
   op_2_scale_tile_task(4*(blockIdx.x - 0) + threadIdx.x / 128 + 64800);
  }
 }
if(blockIdx.x < 88){
  if(threadIdx.x<384){
   op_2_scale_tile_task(3*(blockIdx.x - 0) + threadIdx.x / 128 + 65232);
  }
 }
if(blockIdx.x >= 88&& blockIdx.x < 108){
  if(threadIdx.x<256){
   op_2_scale_tile_task(2*(blockIdx.x - 88) + threadIdx.x / 128 + 65496);
  }
 }
}
__device__ void ark_loop_body(int _iter) {
  op_0_matmul();
  ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
  op_1_add();
  ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
  op_2_scale();
  ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
}
extern "C" __global__ __launch_bounds__(256, 1)
void test_scheduler_simple_mm(volatile int *_it_a, volatile int *_it_b)
{
  ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
  for (;;) {
    if (threadIdx.x == 0) {
      *_it_b = 0;
      while (*_it_a == 0) {}
      _ITER = *_it_a;
    }
    __syncthreads();
    if (_ITER < 0) {
      return;
    }
    for (int _i = 0; _i < _ITER; ++_i) {
      ark_loop_body(_i);
      ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
    }
    if (threadIdx.x == 0) {
      *_it_a = 0;
      while (*_it_b == 0) {}
      _ITER = *_it_b;
    }
    __syncthreads();
    if (_ITER < 0) {
      return;
    }
    for (int _i = 0; _i < _ITER; ++_i) {
      ark_loop_body(_i);
      ark::sync_gpu<108>(_ARK_LOOP_SYNC_STATE);
    }
  }
}
